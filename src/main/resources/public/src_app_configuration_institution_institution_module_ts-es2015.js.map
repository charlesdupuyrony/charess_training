{"version":3,"sources":["./src/app/configuration/institution/form/institution.form.component.ts","./src/app/configuration/institution/form/institution.form.component.html","./src/app/configuration/institution/institution-routing.module.ts","./src/app/configuration/institution/institution.module.ts","./src/app/configuration/institution/page/institution.page.component.ts","./src/app/configuration/institution/page/institution.page.component.html","./src/app/core/models/security/institution.ts"],"names":[],"mappings":"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","file":"src_app_configuration_institution_institution_module_ts-es2015.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\nimport {\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup\n} from \"@angular/forms\";\nimport {Observable, map} from \"rxjs\";\nimport {InstitutionService} from \"../institution.service\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {Person} from \"../../../core/models/security/person\";\nimport {Institution} from \"../../../core/models/security/institution\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './institution.form.component.html'\n})\n\nexport class InstitutionFormComponent implements OnInit {\n\n    fg: FormGroup;\n    title: string;\n    place: Institution;\n    parent = new FormControl();\n    locationAddress = new FormControl();\n    places: Observable<Institution[]>;\n    locations: Observable<Location[]>;\n    placeArray = [];\n    locationArray = [];\n    isIdentifierDuplicated = [];\n    isEmailDuplicated = [];\n    msg: string;\n\n    constructor(private fb: FormBuilder, private router: Router, private service: InstitutionService, private snack: MatSnackBar){\n        const st = this.router.getCurrentNavigation().extras.state;\n        this.title = st?'Edit the current institution':'Create new institution';\n        let pl = (st && st.place)?st.place: new Institution({});\n        pl.managers = this.fb.array(pl.managers==null?[this.fb.group(new Person({}))]: pl.managers.map(m=>this.fb.group(m)));\n        if(pl && pl.parent)\n            this.parent.setValue(pl.parent);\n        if(pl && pl.locationAddress)\n            this.locationAddress.setValue(pl.locationAddress);\n        this.fg = this.fb.group(pl);\n    }\n\n    ngOnInit(){\n        this.places = this.parent.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getPlaces(typeof value==='string'?value.toLowerCase():value.fullname).subscribe((res)=>{\n                    this.placeArray = res;\n                });\n                return this.placeArray;\n            })\n        );\n\n        this.locations = this.locationAddress.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getLocations(typeof value==='string'?value.toLowerCase(): value.fullname).subscribe((res)=>{\n                    this.locationArray = res;\n                });\n                return this.locationArray;\n            })\n        );\n    }\n\n    display(ob): string {\n        if(!ob)\n            return;\n        return ob.fullname?ob.fullname:ob.name;\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    private success(){\n        this.toast('bg-green','The usr has been successfully created');\n        this.back();\n    }\n\n    private error(err: HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    submit(ob: any): void {\n        ob.parent = this.parent.value?.toString().trim().length <1?ob.parent:this.parent.value;\n        ob.locationAddress = this.locationAddress.value;\n        ob.managers = this.managers.getRawValue();\n        this.service.save(ob).subscribe(\n            (res) => this.success(),\n            (err) => this.error(err)\n        );\n    }\n\n    back(){\n        this.router.navigate(['configuration/institution/page']);\n    }\n\n    get managers(): FormArray {\n        return this.fg.get('managers') as FormArray;\n    }\n\n    check(index){\n        const managers = this.managers.getRawValue();\n        const email = managers[index].email;\n        if(email?.trim().length < 1)\n            return;\n        if(managers.length > 1){\n            for(let i=0; i< managers.length; i++){\n                if(index != i){\n                    if(email === managers[i].email){\n                        this.isEmailDuplicated[index] = true;\n                        this.msg = ' (existed in present pool)';\n                        return;\n                    }\n                }\n            }\n        }\n        this.service.getPersonByEmail(email).subscribe(res => {\n            if(res != null){\n                this.managers.controls.unshift(this.fb.group(res));\n                this.pull(index+1);\n            }\n        });\n    }\n\n    push(){\n        this.managers.controls.unshift(this.fb.group(new Person({})));\n    }\n\n    pull(index: number): void {\n        if (this.managers.length > 1)\n            this.managers.removeAt(index);\n    }\n}","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{title | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div>\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-5\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Name' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-error *ngIf=\"fg.get('name').hasError('')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Accronym' | translate}}</mat-label>\n                                        <input matInput formControlName=\"accronym\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-5\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Parent' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"parent\" [matAutocomplete]=\"autoParent\">\n                                        <mat-autocomplete autoActiveFirstOption #autoParent=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let p of places | async\" [value]=\"p\">{{p.fullname}}</mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Text Address' | translate}}</mat-label>\n                                        <input matInput formControlName=\"textAddress\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Location Address' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"locationAddress\" [matAutocomplete]=\"autoLoation\">\n                                        <mat-autocomplete autoActiveFirstOption #autoLoation=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let l of locations | async\" [value]=\"l\">{{l.fullname}}</mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <fieldset>\n                                <div class=\"row\">\n                                    <legend>{{\"Manager\" | translate}}</legend>\n                                    <ng-container formArrayName=\"managers\" *ngFor=\"let manager of managers.controls; index as i\">\n                                        <ng-container [formGroupName]=\"i\">\n                                            <!--<div class=\"col-2\">-->\n                                            <!--<mat-form-field class=\"example-full-width mb-3\">-->\n                                            <!--<mat-label>-->\n                                            <!--{{\"Identifier\" | translate}}-->\n                                            <!--<span *ngIf=\"isIdentifierDuplicated[i]\" class=\"error\">{{msg | translate}}</span>-->\n                                            <!--</mat-label>-->\n                                            <!--<input matInput mask=\"000-000-000-0\" formControlName=\"identifier\" required (blur)=\"check(i, 'identifier')\"/>-->\n                                            <!--</mat-form-field>-->\n                                            <!--</div>-->\n                                            <div class=\"col-4\">\n                                                <mat-form-field class=\"example-full-width mb-4\">\n                                                    <mat-label>{{\"Email\"| translate}}<span *ngIf=\"isEmailDuplicated[i]\" class=\"error\">{{msg | translate}}</span></mat-label>\n                                                    <input matInput formControlName=\"email\" [showMaskTyped]=\"true\" (blur)=\"check(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-4\">\n                                                <mat-form-field class=\"example-full-width mb-4\">\n                                                    <mat-label>{{\"FirstName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"LastName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"managers['controls'][i].status == 'VALID' && i===0 && !msg\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n\n                                                </div>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"managers['controls'].length > 1 && (i>0 || managers['controls'][i].status != 'VALID')\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"pull(i)\">\n                                                        <mat-icon class=\"col-white\">delete </mat-icon>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </fieldset>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid || msg\">{{\"Save\" | translate}} {{msg}}</button>\n                                            <button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {InstitutionPageComponent} from \"./page/institution.page.component\";\r\nimport {InstitutionFormComponent} from \"./form/institution.form.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'page',\r\n        component: InstitutionPageComponent,\r\n    },\r\n    {\r\n        path: 'form',\r\n        component: InstitutionFormComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InstitutionRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {InstitutionRoutingModule} from \"./institution-routing.module\";\r\nimport {InstitutionService} from \"./institution.service\";\r\nimport {InstitutionPageComponent} from \"./page/institution.page.component\";\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {InstitutionFormComponent} from \"./form/institution.form.component\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {NgxMaskModule} from \"ngx-mask\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        InstitutionPageComponent,\r\n        InstitutionFormComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        InstitutionRoutingModule,\r\n        NgxDatatableModule,\r\n        NgxMaskModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    providers: [InstitutionService]\r\n})\r\n\r\nexport class InstitutionModule {}\r\n","import {Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {InstitutionService} from \"../institution.service\";\nimport {DataSource} from \"@angular/cdk/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {SelectionModel} from \"@angular/cdk/collections\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Router} from \"@angular/router\";\nimport {MatMenuTrigger} from \"@angular/material/menu\";\nimport {BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {DeleteComponent} from \"../../delete/delete.confirm\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './institution.page.component.html',\n    styleUrls: ['./institution.page.component.scss']\n})\n\nexport class InstitutionPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    displayedColumns = [\n        'name',\n        'address',\n        'managers',\n        // 'parent',\n        'actions',\n    ];\n\n    database: InstitutionService | null;\n    datasource: Source | null;\n    selection = new SelectionModel<Institution>(true, []);\n    institution: Institution | null;\n    profiles=[];\n    dim = {\n        width: '1200px',\n        height: '420px'\n    };\n\n    constructor(public http: HttpClient, public dialog: MatDialog, private snack: MatSnackBar, private factory: InstitutionService, private router: Router){\n        super();\n    }\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild('filter', { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = { x: '0px', y: '0px' };\n\n    public load() {\n        this.database = new InstitutionService(this.http);\n        this.datasource = new Source(this.database, this.paginator, this.sort);\n        this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\n            () => {\n                if (!this.datasource) {\n                    return;\n                }\n                this.datasource.filter = this.filter.nativeElement.value;\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.load();\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    success(){\n        this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n            this.router.navigate(['/configuration/institution/page']);\n        });\n        this.toast('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.toast('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    add(){\n        this.router.navigate(['configuration/institution/form']);\n    }\n\n    edit(row){\n        this.router.navigate(['configuration/institution/form'],{state:{place: row}});\n    }\n\n    delete(row): void {\n        const dialogRef = this.dialog.open(DeleteComponent, {});\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.factory.deleteInstitution(row.id).subscribe(\n                    (res) => this.success(),\n                    (err: HttpErrorResponse)=>this.error(err)\n                );\n                this.load();\n            }\n        });\n    }\n\n    displayManagers(managers) {\n        let display = '';\n        if (managers.length > 0) {\n            if (managers.length == 1) {\n                display = managers[0].fullname;\n            } else if (managers.length == 2){\n                display = managers[0].fullname + ' & ' + managers[1].fullname;\n            } else {\n                display = managers[0].fullname + ' & ' +  (managers.length-1) + ' autres';\n            }\n        }\n        return display;\n    }\n}\n\n\nexport class Source extends DataSource<Institution> {\n\n    filterChange = new BehaviorSubject('');\n\n    get filter(): string {\n        return this.filterChange.value;\n    }\n\n    set filter(filter: string) {\n        this.filterChange.next(filter);\n    }\n\n    filteredData: Institution[] = [];\n    renderedData: Institution[] = [];\n\n    constructor(public service: InstitutionService, public paginator: MatPaginator, public ms: MatSort){\n        super();\n        this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n\n    connect(): Observable<Institution[]>{\n        const displayDataChanges = [\n            this.service.dataChange,\n            this.ms.sortChange,\n            this.filterChange,\n            this.paginator.page,\n        ];\n        this.service.getInstitutions();\n        return merge(...displayDataChanges).pipe(\n            map(() => {\n                this.filteredData = this.service.data\n                    .slice()\n                    .filter((institution: Institution) => {\n                        const search = (\n                            institution.name\n                        ).toLowerCase();\n                        return search.indexOf(this.filter.toLowerCase()) !== -1;\n                    });\n                const sortedData = this.sortData(this.filteredData.slice());\n                const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n                this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n                return this.renderedData;\n            })\n        );\n    }\n\n    disconnect() {}\n\n    sortData(data: Institution[]): Institution[] {\n        if (!this.ms.active || this.ms.direction === '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n            switch (this.ms.active) {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'name':\n                    [propertyA, propertyB] = [a.name, b.name];\n                    break;\n\n            }\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (\n                (valueA < valueB ? -1 : 1) * (this.ms.direction === 'asc' ? 1 : -1)\n            );\n        });\n    }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive\">\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ml-0\">\n                                                <li class=\"dropdown\"><h2><strong>{{'training.configuration.list.facility' | translate}}</strong></h2></li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label><i class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\" aria-label=\"Search box\">\n                                                </li>\n                                            </ul>\n                                            <ul class=\"header-buttons\">\n                                                <li>\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <mat-table #table [dataSource]=\"datasource\" matSort class=\"mat-cell\">\n                                    <ng-container>\n                                        <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                                                          [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"name\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Name'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.fullname}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"address\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Adress'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.address}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"managers\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Manager'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{displayManagers(row.managers)}}</mat-cell>\n                                    </ng-container>\n                                    <!--<ng-container matColumnDef=\"parent\">-->\n                                        <!--<mat-header-cell *matHeaderCellDef mat-sort-header>{{'Parent'| translate}}</mat-header-cell>-->\n                                        <!--<mat-cell *matCellDef=\"let row\">{{row?.parent?.name}}</mat-cell>-->\n                                    <!--</ng-container>-->\n                                    <ng-container matColumnDef=\"actions\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Action'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">\n                                            <span>\n                                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"edit(row)\">\n                                                    <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                                </button>\n                                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"delete(row)\">\n                                                    <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                                </button>\n                                            </span>\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple> </mat-row>\n                                </mat-table>\n                                <mat-paginator #paginator [length]=\"datasource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","export class Institution {\n    id: number;\n    name: string;\n    accronym: string;\n    fullname: string;\n    managers?: [{Person}];\n    locationAddress?: Location;\n    textAddress?: string;\n    address?: string;\n    parent?: Institution;\n\n    constructor(institution){\n        {\n            this.id = institution.id;\n            this.name = institution.name;\n            this.accronym = institution.accronym;\n            this.parent = institution.parent || null;\n            this.textAddress = institution.textAddress || '';\n            this.locationAddress = institution.locationAddress || null;\n            this.managers = institution.managers || null;\n        }\n    }\n}"],"sourceRoot":"webpack:///"}