{"version":3,"sources":["./src/app/core/models/training/participant.ts","./src/app/core/models/training/training.participants.ts","./src/app/organisation/training/broadcast-completion/training.broadcast.completion.component.ts","./src/app/organisation/training/broadcast-completion/training.broadcast.completion.component.html","./src/app/organisation/training/broadcast/training.broadcast.component.ts","./src/app/organisation/training/broadcast/training.broadcast.component.html","./src/app/organisation/training/details/training.details.component.ts","./src/app/organisation/training/details/training.details.component.html","./src/app/organisation/training/page/training.page.component.ts","./src/app/organisation/training/page/training.page.component.html","./src/app/organisation/training/training-routing.module.ts","./src/app/organisation/training/training.module.ts"],"names":[],"mappings":"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","file":"src_app_organisation_training_training_module_ts-es2015.js","sourcesContent":["import {Institution} from \"../security/institution\";\nimport {Training} from \"./training\";\nimport {Person} from \"../security/person\";\n\nexport class Participant {\n    id: number;\n    person: Person;\n    partner: Institution;\n    training: Training;\n    status: string;\n    logistic: string;\n    transport: string;\n\n    constructor(t) {\n        {\n            this.id = t.id;\n            this.person = t.person;\n            this.partner = t.partner;\n            this.training = t.training;\n            this.status = t.status;\n            this.logistic = t.logistic;\n            this.transport = t.transport;\n        }\n    }\n}\n","import {Training} from \"./training\";\n\nexport class TrainingParticipants {\n    id: number;\n    training: Training;\n    participants: [{Participant}];\n\n    constructor(t) {\n        {\n            this.id = t.id;\n            this.training = t.training;\n            this.participants = t.participants;\n        }\n    }\n}\n\n","import {Component, OnInit} from \"@angular/core\";\nimport {\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup, Validators\n} from \"@angular/forms\";\nimport {Observable, map} from \"rxjs\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {TrainingService} from \"../training.service\";\nimport {Topic} from \"../../../core/models/training/topic\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {Training} from \"../../../core/models/training/training\";\nimport {InstitutionService} from \"../../../configuration/institution/institution.service\";\nimport {Person} from \"../../../core/models/security/person\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './training.broadcast.completion.component.html',\n    styleUrls: ['./training.broadcast.completion.component.scss']\n\n})\n\nexport class TrainingBroadcastCompletionComponent implements OnInit {\n\n    private _msg: string;\n\n    constructor(private router: Router){\n        const tn = this.router.getCurrentNavigation().extras.state?.training;\n        this._msg = `You have successfully broadcast the training: \"${tn?.topic?.title}\", scheduled from ${tn?.startDate} to ${tn?.endDate}`;\n    }\n\n    get msg(): string {\n        return this._msg;\n    }\n\n    ngOnInit(){}\n\n    go(e){\n        this.router.navigate(['/organisation/training/broadcast']);\n    }\n}","<section class=\"content\">\n    <div class=\"broadcast\">{{msg}}</div>\n    <br/><br/>\n    <div style=\"text-align:center\">Go to:\n        <span (click)=\"go('list')\">{{'Training List' | translate}}</span> |\n        <span (click)=\"go('new')\">{{'New Broadcast' | translate}}</span> |\n        <span (click)=\"go('planning')\">{{'Planning' | translate}}</span>\n    </div>\n</section>\n\n","import {Component, OnInit} from \"@angular/core\";\nimport {\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup, Validators\n} from \"@angular/forms\";\nimport {Observable, map} from \"rxjs\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {TrainingService} from \"../training.service\";\nimport {Topic} from \"../../../core/models/training/topic\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {Training} from \"../../../core/models/training/training\";\nimport {InstitutionService} from \"../../../configuration/institution/institution.service\";\nimport {TopicService} from \"../../../configuration/topic/topic.service\";\nimport {TopicFormComponent} from \"../../../configuration/topic/form/topic.form.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Person} from \"../../../core/models/security/person\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './training.broadcast.component.html',\n    styleUrls: ['./training.broadcast.component.scss']\n})\n\nexport class TrainingBroadcastComponent implements OnInit {\n\n    fg: FormGroup;\n    topics: Observable<Topic[]>;\n    topic = new FormControl();\n    topicArray = [];\n\n    locations: Observable<Institution[]>;\n    location = new FormControl();\n    locationArray = [];\n\n    categories = new FormControl();\n    categoryArray = [];\n\n    partners = new FormControl();\n    partnerArray = [];\n\n    dim = {\n        width: '1000px',\n        height: '380px'\n    };\n    loading = false;\n\n    constructor(private fb: FormBuilder, private router: Router, private service: TrainingService, private topicService: TopicService,\n                private placeService: InstitutionService, private snack: MatSnackBar, public dialog: MatDialog){\n\n        const st = this.router.getCurrentNavigation().extras.state;\n        let trn = (st && st.training)?st.training: new Training({});\n\n        this.topic.setValue(trn.topic);\n        this.location.setValue(trn.location);\n        this.fg = this.fb.group(trn, {validator: this.datesValidator('startDate', 'endDate')});\n\n\n        // this.partners.setValue(trn.partners);\n        // console.log(trn.partners, \"-----------------------------------\");\n\n        // this.partners = trn.partners;\n        // this.categories.setValue(trn.categories);\n\n        // this.fg = this.fb.group(new Training({}), {validator: this.datesValidator('startDate', 'endDate')});\n\n        // const st = this.router.getCurrentNavigation().extras.state;\n        // this.title = st?'Edit the current institution':'Create new institution';\n        // let pl = (st && st.place)?st.place: new Institution({});\n        // pl.managers = this.fb.array(pl.managers==null?[this.fb.group(new Person({}))]: pl.managers.map(m=>this.fb.group(m)));\n        // if(pl && pl.parent)\n        //     this.parent.setValue(pl.parent);\n        // if(pl && pl.locationAddress)\n        //     this.locationAddress.setValue(pl.locationAddress);\n        // this.fg = this.fb.group(pl);\n\n    }\n\n    ngOnInit(){\n        this.topics = this.topic.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getTopics(typeof value==='string'?value.toLowerCase():value.name).subscribe((res)=>{\n                    this.topicArray = res;\n                });\n                return this.topicArray;\n            })\n        );\n\n        this.locations = this.location.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getLocations(typeof value==='string'?value.toLowerCase():value.name).subscribe((res)=>{\n                    this.locationArray = res;\n                });\n                return this.locationArray;\n            })\n        );\n\n        this.service.getCategories('').subscribe((res)=>{\n            this.categoryArray = res;\n        });\n\n        this.placeService.getPlaces('').subscribe((res)=>{\n            this.partnerArray = res;\n        });\n    }\n\n    datesValidator(startDate: string, endDate: string){\n        return (formGroup: FormGroup) => {\n            const start = formGroup.controls[startDate];\n            const end = formGroup.controls[endDate];\n            if (end.errors && !end.errors.datesValidator) {\n                return;\n            }\n            if (new Date(start.value) > new Date(end.value)) {\n                end.setErrors({ datesValidator: true });\n            } else {\n                end.setErrors(null);\n            }\n        }\n    }\n\n    // updatePartners(){\n    //     if(this.partnerArray.length > 0 && typeof this.location.value !='string'){\n    //         this.partnerArray = this.partnerArray.filter(p => p.id != this.location.value?.id);\n    //     }\n    // }\n\n    completion(t){\n        // this.router.navigate(['/organisation/training/broadcast-completion'], {state: {training: t}});\n        this.router.navigate(['/organisation/training/page']);\n    }\n\n    initialize(){}\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    private success(t){\n        this.loading = false;\n        this.toast('bg-green','The user has been successfully created');\n        this.completion(t);\n    }\n\n    private error(err: HttpErrorResponse){\n        this.loading = false;\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    display(ob): string {\n        if(!ob)\n            return;\n        return ob.fullname?ob.fullname:(ob.name?ob.name:ob.title);\n    }\n\n    submit(ob: any): void {\n        this.loading = true;\n        ob.topic = this.topic.value;\n        ob.location = this.location.value;\n        ob.categories = this.categories.value;\n        ob.partners = this.partners.value;\n\n        this.service.broadcast(ob).subscribe(\n            (res) => this.success(res),\n            (err) => this.error(err)\n        );\n    }\n\n    cancel(): void {\n        // this.fm.close();\n    }\n\n    goToList() {\n        this.router.navigate(['organisation/training/page']);\n    }\n\n    add(){\n        const dialogRef = this.dialog.open(TopicFormComponent, {\n            ...this.dim,\n            data: {\n                topic: this.topic,\n                action: 'add',\n            }\n        });\n    }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{'training.organisation.broadcast' | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div>\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-11\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Title' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"topic\" [matAutocomplete]=\"autoTopic\" required>\n                                        <mat-autocomplete autoActiveFirstOption #autoTopic=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let t of topics | async\" [value]=\"t\">{{t.fullname}}</mat-option>\n                                        </mat-autocomplete>\n                                        <mat-error *ngIf=\"topic.hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-1 add-button-training\" (click)=\"add()\">\n                                    <button mat-mini-fab color=\"primary\" type=\"button\">\n                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Start Date' | translate}}</mat-label>\n                                        <input matInput formControlName=\"startDate\" [matDatepicker]=\"start\" required>\n                                        <mat-datepicker-toggle matSuffix [for]=\"start\"></mat-datepicker-toggle>\n                                        <mat-datepicker #start></mat-datepicker>\n                                        <mat-error *ngIf=\"fg.get('startDate').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-2\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'End Date' | translate}}</mat-label>\n                                        <input matInput formControlName=\"endDate\" [matDatepicker]=\"end\" required>\n                                        <mat-datepicker-toggle matSuffix [for]=\"end\"></mat-datepicker-toggle>\n                                        <mat-datepicker #end></mat-datepicker>\n                                        <mat-error *ngIf=\"fg.get('endDate').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                        <mat-error *ngIf=\"fg.get('endDate').hasError('datesValidator')\">{{'End Date needs to be greater than first date'| translate}}</mat-error>\n\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-8\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Where to' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"location\" [matAutocomplete]=\"autoLocation\" required>\n                                        <!--<input type=\"text\" matInput [formControl]=\"location\" [matAutocomplete]=\"autoLocation\" (blur)=\"updatePartners();\" required>-->\n                                        <mat-autocomplete autoActiveFirstOption #autoLocation=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let l of locations | async\" [value]=\"l\">{{l.name}}</mat-option>\n                                        </mat-autocomplete>\n                                        <mat-error *ngIf=\"location.hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-9\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Participants Category' | translate}}</mat-label>\n                                        <mat-select multiple [formControl]=\"categories\" required=\"true\" [(ngModel)]=\"categoryArray\">\n                                            <mat-option *ngFor=\"let c of categoryArray\" [value]=\"c\">{{c.name}}</mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"categories.hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-3\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Number of attendees per network' | translate}}</mat-label>\n                                        <input matInput formControlName=\"capacity\" required>\n                                        <mat-error *ngIf=\"fg.get('capacity').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Partners' | translate}}</mat-label>\n                                        <mat-select multiple [formControl]=\"partners\" required=\"true\" [(ngModel)]=\"partnerArray\">\n                                            <mat-option *ngFor=\"let p of partnerArray\" [value]=\"p\">{{p.name}}</mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"partners.hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-3\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Mode Transmission' | translate}}</mat-label>\n                                        <mat-select formControlName=\"mode\" required>\n                                            <mat-option [value]=\"'MODE_ON_SITE'\">En présentiel</mat-option>\n                                            <mat-option [value]=\"'MODE_ON_LINE'\">En ligne</mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"fg.get('mode').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-3\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Test Type' | translate}}</mat-label>\n                                        <mat-select formControlName=\"testType\" required>\n                                            <mat-option [value]=\"'TEST_TYPE_AUTO'\">Auto Évaluation</mat-option>\n                                            <mat-option [value]=\"'TEST_TYPE_PRE_AND_POST'\">Pré et Post Tests</mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"fg.get('testType').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <button mat-raised-button color=\"primary\"  [class.auth-spinner]=\"loading\" [disabled]=\"loading\" [type]=\"submit\" [disabled]=\"!fg.valid\">{{\"Save\" | translate}}</button>\n                                            <button mat-raised-button color=\"warn\" (click)=\"initialize()\" tabindex=\"-1\">{{\"Reinitialize\" | translate}}</button>\n                                            <button mat-raised-button color=\"delete\" (click)=\"goToList()\" tabindex=\"-2\">{{\"Go to List\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import {Component, OnInit} from \"@angular/core\";\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {Training} from \"../../../core/models/training/training\";\nimport {TrainingService} from \"../training.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Person} from \"../../../core/models/security/person\";\nimport {PartnerTrainingParticipants} from \"../../../core/models/training/partner.training.participants\";\nimport {Participant} from \"../../../core/models/training/participant\";\nimport {TrainingParticipants} from \"../../../core/models/training/training.participants\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {InstitutionService} from \"../../../configuration/institution/institution.service\";\n\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './training.details.component.html',\n    styleUrls: ['./training.details.component.scss']\n\n})\n\nexport class TrainingDetailsComponent implements OnInit {\n    fg: FormGroup;\n    training: Training;\n    startDate: Date;\n    endDate: Date;\n    partners = new FormControl();\n    partnerArray = [];\n\n    // loading = false;\n\n\n    constructor(private router: Router, private fb: FormBuilder, private service: TrainingService, private snack: MatSnackBar, private placeService: InstitutionService){\n        const state = this.router.getCurrentNavigation().extras.state;\n\n        this.training = state?state.training:JSON.parse(localStorage.getItem(\"training\"));\n        this.startDate = new Date(this.training?.startDate);\n        this.endDate = new Date(this.training?.endDate);\n\n        const trainingParticpants = new TrainingParticipants(\n            {\n                'training': this.training,\n                'participants': this.fb.array(this.training.participants.length <1?[this.format(new Participant({}))]:this.training.participants.map(\n                 p => this.format(new Participant(p)))\n                )\n            });\n        this.fg = this.fb.group(trainingParticpants);\n    }\n\n    ngOnInit(){\n        this.placeService.getPlaces('').subscribe((res)=>{\n            this.partnerArray = res;\n        });\n    }\n\n    get participants(): FormArray {\n        return this.fg.get('participants') as FormArray;\n    }\n\n    compare(a, b): boolean {\n        return a && b ?(a.id && b.id && a.id===b.id):a===b;\n    }\n\n    format(p: Participant): FormGroup {\n        return this.fb.group({\n            id: [p?.id],\n            partner: [p?.partner],\n            logistic: [p.logistic],\n            transport: [p.transport],\n            person: this.fb.group({\n                id: [p?.person?.id],\n                identifier: [p?.person?.identifier, [Validators.required]],\n                firstName: [p?.person?.firstName, [Validators.required]],\n                lastName: [p?.person?.lastName, [Validators.required]],\n                phone: [p?.person?.phone, [Validators.required]],\n                email: [p?.person?.email, [Validators.required]],\n            })\n        });\n    }\n\n    edit(){\n        this.router.navigate(['organisation/training/broadcast'], {state: {training: this.training}});\n        // this.router.navigate(['configuration/institution/form'],{state:{place: row}});\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    back(){\n        this.router.navigate(['organisation/training/page']);\n    }\n\n    private chgSuccess(){\n        this.toast('bg-green','Training status successfully changed...');\n        // localStorage.setItem(\"training\", JSON.stringify(this.training));\n        // this.router.navigate(['organisation/training/details'],{state:{training: this.training}});\n    }\n\n    private success(){\n        this.toast('bg-green','The usr has been successfully created');\n        this.back();\n    }\n\n    private error(err: HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    private chgError(err: HttpErrorResponse){\n        this.toast('bg-red','Technical issues. Status cannot be changed!');\n        console.error(err);\n    }\n\n    submit(ob: any): void {\n        ob.id = this.training.id;\n        ob.participants = this.participants.getRawValue();\n        this.service.updateParticipants(ob).subscribe(\n            (res) => this.success(),\n            (err) => this.error(err)\n        );\n    }\n\n    push(){\n        this.participants.controls.unshift(this.format(new Participant({})));\n    }\n\n    pull(index: number): void {\n        if (this.participants.length > 0){\n            this.participants.removeAt(index);\n            if(this.participants.length==0)\n                this.push()\n        }\n\n    }\n}","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{'Training Details' | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <!--<div>-->\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-1\" (click)=\"edit();\" style=\"cursor:pointer;\">\n                                    <i [ngClass]=\"['material-icons-two-tone', 'icon', training.status.toLowerCase()]\">subject</i>\n                                </div>\n                                <div class=\"col-11\">\n                                    <div class=\"row title\">{{training?.topic?.fullname}}</div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            {{'Expected participants total number' | translate}}: <span class=\"corps\">{{training.partners.length * training.capacity}}</span>\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            {{'Number of participants per network' | translate}}:  <span class=\"corps\">{{training.participants.length}}</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            Date de début: <span class=\"corps\">{{startDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            Date de fin: <span class=\"corps\">{{endDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">Catégorie de professionels attendue:\n                                            <span class=\"corps\" *ngFor=\"let category of training?.categories; index as i\">\n                                            {{i===0?category.name: (i===training.categories.length-1?' et ' + category.name: ' , ' + category.name)}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">{{'Invited partners' | translate}}:\n                                            <span class=\"corps\" *ngFor=\"let partner of training?.partners; index as i\">\n                                                <span class=\"{{i >0?'pushspan':''}}\">{{partner.fullname}}<br/></span>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            Lieu de formation: <span class=\"corps\">{{training?.location.fullname}}</span> se trouvant (au/à/aux) <span class=\"corps\">{{training?.location.address}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <br/>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <button mat-raised-button color=\"primary\" [type]=\"submit\">{{\"Save\" | translate}}</button>\n                                            <!--<button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"unchanged\">{{\"Save\" | translate}}</button>-->\n                                            <button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <fieldset>\n                                <div class=\"row\">\n                                    <legend>{{\"Participants\" | translate}}</legend>\n                                    <ng-container formArrayName=\"participants\" *ngFor=\"let participant of participants.controls; index as i\">\n                                        <ng-container [formGroupName]=\"i\">\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width\">\n                                                    <mat-label>{{'Institution' | translate}}</mat-label>\n                                                    <mat-select [compareWith]=\"compare\" formControlName=\"partner\">\n                                                        <mat-option *ngFor=\"let p of partnerArray\" [value]=\"p\">{{p.accronym}}</mat-option>\n                                                    </mat-select>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width mb-2\" formGroupName=\"person\">\n                                                    <mat-label>{{\"NIF\" | translate}}</mat-label>\n                                                    <input matInput mask=\"000-000-000-0\" placeholder=\"000-000-000-0\" formControlName=\"identifier\" required (blur)=\"checkIdentifier(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width mb-2\" formGroupName=\"person\">\n                                                    <mat-label>{{\"Phone\"| translate}}</mat-label>\n                                                    <input matInput matInput mask=\"0000-0000\" placeholder=\"0000-0000\" formControlName=\"phone\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-3\" formGroupName=\"person\">\n                                                    <mat-label>{{\"Email\"| translate}}</mat-label>\n                                                    <input matInput formControlName=\"email\" [showMaskTyped]=\"true\" required (blur)=\"checkEmail(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-3\" formGroupName=\"person\">\n                                                    <mat-label>{{\"FirstName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-2\" formGroupName=\"person\">\n                                                    <mat-label>{{\"LastName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width\">\n                                                    <mat-label>{{'Logistic' | translate}}</mat-label>\n                                                    <mat-select formControlName=\"logistic\" required>\n                                                        <mat-option [value]=\"'hotel'\">Hôtel</mat-option>\n                                                        <mat-option [value]=\"'residence'\">Résidence</mat-option>\n                                                        <mat-option [value]=\"'other'\">Autre</mat-option>\n                                                    </mat-select>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width\">\n                                                    <mat-label>{{'Logistic' | translate}}</mat-label>\n                                                    <mat-select formControlName=\"transport\" required>\n                                                        <mat-option [value]=\"'avion'\">Avion</mat-option>\n                                                        <mat-option [value]=\"'machine'\">Machine</mat-option>\n                                                        <mat-option [value]=\"'bateau'\">Bateau</mat-option>\n                                                        <mat-option [value]=\"'other'\">Autre</mat-option>\n                                                    </mat-select>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <div class=\"example-button-row\" *ngIf=\"participants['controls'][i].status == 'VALID' && i===0\">\n                                                    <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\"><mat-icon class=\"col-white\">add</mat-icon></button>\n                                                </div>\n                                                <div class=\"example-button-row\" *ngIf=\"participants['controls'][i].status != 'VALID' || i!==0\">\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"pull(i)\"><mat-icon class=\"col-white\">delete </mat-icon></button>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        <!--</div>-->\n    </div>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!--<section class=\"content\">-->\n    <!--<div class=\"container-fluid\">-->\n        <!--<div class=\"block-header\">-->\n            <!--<div class=\"row\">-->\n                <!--<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">-->\n                    <!--<h4 class=\"page-title\">{{'Training Details' | translate}}</h4>-->\n                    <!--<br/>-->\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n        <!--<div class=\"row clearfix\">-->\n            <!--<div>-->\n                <!--<div class=\"card\">-->\n                    <!--<div class=\"body\">-->\n                        <!--<form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">-->\n                            <!--<div class=\"row\">-->\n                                <!--<div class=\"col-1\">-->\n                                    <!--<div class=\"{{training.status.toLowerCase()}}\"></div>-->\n                                <!--</div>-->\n                                <!--<div class=\"col-11\">-->\n                                    <!--<div class=\"row title\">{{training.topic?.fullname}}</div>-->\n                                    <!--<div class=\"row\">-->\n                                        <!--<div class=\"inline\">-->\n                                            <!--{{'Start Date' | translate}}: <span class=\"corps\">{{startDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>-->\n                                            <!--&nbsp;&nbsp;&nbsp;&nbsp;-->\n                                            <!--{{'End Date' | translate}}: <span class=\"corps\">{{endDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>-->\n                                        <!--</div>-->\n                                    <!--</div>-->\n                                    <!--<div class=\"row\">-->\n                                        <!--<div class=\"inline\">-->\n                                            <!--{{'Training location' | translate}}: <span class=\"corps\">{{training?.location.fullname}}</span>-->\n                                            <!--{{'located at' | translate}}:  <span class=\"corps\">{{training?.location.address}}</span>-->\n                                        <!--</div>-->\n                                    <!--</div>-->\n                                    <!--<div class=\"row\">-->\n                                        <!--<div class=\"inline\">{{'Expected categories' | translate}}:-->\n                                            <!--<span class=\"corps\" *ngFor=\"let category of training?.categories; index as i\">-->\n                                            <!--{{i===0?category.name: (i===training.categories.length-1?' et ' + category.name: ', ' + category.name)}}-->\n                                            <!--</span>-->\n                                        <!--</div>-->\n                                    <!--</div>-->\n\n\n                                <!--</div>-->\n                                <!--<div class=\"col-sm actions\">-->\n                                    <!--<span class=\"right btn-act-padding\">-->\n                                        <!--<button mat-raised-button color=\"uncompleted\" type=\"button\" (click)=\"chg('TRAINING_UNCOMPLETED')\">{{\"training_uncompleted_action\" | translate}}</button>-->\n                                    <!--</span>-->\n                                    <!--<span class=\"right btn-act-padding\">-->\n                                        <!--<button mat-raised-button color=\"completed\" type=\"button\" (click)=\"chg('TRAINING_COMPLETED')\">{{\"training_completed_action\" | translate}}</button>-->\n                                    <!--</span>-->\n                                    <!--<span class=\"right btn-act-padding\">-->\n                                        <!--<button mat-raised-button color=\"pending\" type=\"button\" (click)=\"chg('TRAINING_PENDING')\">{{\"training_pending_action\" | translate}}</button>-->\n                                    <!--</span>-->\n                                    <!--<span class=\"right btn-act-padding\"><button mat-raised-button color=\"validated\">{{\"training_validated_action\" | translate}}</button></span>-->\n                                    <!--<span class=\"right btn-act-padding\"><button mat-raised-button color=\"rejected\">{{\"training_rejected_action\" | translate}}</button></span>-->\n                                    <!--<span class=\"right btn-act-padding\"><button mat-raised-button color=\"primary\" [type]=\"submit\">{{\"Save\" | translate}}</button></span>-->\n                                    <!--<span class=\"right btn-act-padding\"><button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Back\" | translate}}</button></span>-->\n                                    <!--<span class=\"right btn-act-padding\"><button mat-raised-button tabindex=\"-1\">{{\"Submit participants\" | translate}}</button></span>-->\n                                <!--</div>-->\n                            <!--</div>-->\n                            <!--<br/>-->\n                            <!--&lt;!&ndash;<fieldset>&ndash;&gt;-->\n                                <!--&lt;!&ndash;<div class=\"row\">&ndash;&gt;-->\n                                    <!--&lt;!&ndash;<legend>{{\"Participants\" | translate}}</legend>&ndash;&gt;-->\n                                    <!--&lt;!&ndash;<ng-container formArrayName=\"participants\" *ngFor=\"let person of participants.controls; index as i\">&ndash;&gt;-->\n                                        <!--&lt;!&ndash;<ng-container [formGroupName]=\"i\">&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-2\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<mat-form-field class=\"example-full-width mb-2\">&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<mat-label>{{\"Numéro d'Identifiant Fiscal\" | translate}}</mat-label>&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<input matInput mask=\"000-000-000-0\" formControlName=\"identifier\" required/>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-1\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<mat-form-field class=\"example-full-width mb-2\">&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<mat-label>{{\"Phone\"| translate}}</mat-label>&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<input matInput formControlName=\"phone\" [showMaskTyped]=\"true\" required/>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-3\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<mat-form-field class=\"example-full-width mb-3\">&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<mat-label>{{\"Email\"| translate}}</mat-label>&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<input matInput formControlName=\"email\" [showMaskTyped]=\"true\" required/>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-3\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<mat-form-field class=\"example-full-width mb-3\">&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<mat-label>{{\"FirstName\" | translate}}</mat-label>&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-2\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<mat-form-field class=\"example-full-width mb-2\">&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<mat-label>{{\"LastName\" | translate}}</mat-label>&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;&lt;!&ndash;<div class=\"col-1\" *ngIf=\"participants['controls'][i].status == 'VALID' && i===0\">&ndash;&gt;&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-1\" *ngIf=\"participants['controls'][i].status == 'VALID' && i===0 && participants['controls'].length < training.capacity\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<div class=\"example-button-row\" >&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\"><mat-icon class=\"col-white\">add</mat-icon></button>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;&lt;!&ndash;<div class=\"col-1\" *ngIf=\"participants['controls'].length > 1 && (i>0 || participants['controls'][i].status != 'VALID')\">&ndash;&gt;&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<div class=\"col-1\" *ngIf=\"participants['controls'].length > 1 && (i>0 || participants['controls'][i].status != 'VALID') || participants['controls'].length >= training.capacity\">&ndash;&gt;-->\n                                                <!--&lt;!&ndash;<div class=\"example-button-row\" >&ndash;&gt;-->\n                                                    <!--&lt;!&ndash;<button mat-mini-fab color=\"warn\" (click)=\"pull(i)\"><mat-icon class=\"col-white\">delete </mat-icon></button>&ndash;&gt;-->\n                                                <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                                        <!--&lt;!&ndash;</ng-container>&ndash;&gt;-->\n                                    <!--&lt;!&ndash;</ng-container>&ndash;&gt;-->\n                                <!--&lt;!&ndash;</div>&ndash;&gt;-->\n                            <!--&lt;!&ndash;</fieldset>&ndash;&gt;-->\n                            <!--<div class=\"row\">-->\n                                <!--<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">-->\n                                    <!--<div class=\"example-button-row\">-->\n                                        <!--<div class=\"example-button-row\">-->\n                                            <!--&lt;!&ndash;<button mat-raised-button color=\"primary\" [type]=\"submit\">{{\"Save\" | translate}}</button>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid\">{{\"Save\" | translate}}</button>&ndash;&gt;-->\n                                            <!--&lt;!&ndash;<button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>&ndash;&gt;-->\n                                        <!--</div>-->\n                                    <!--</div>-->\n                                <!--</div>-->\n                            <!--</div>-->\n                        <!--</form>-->\n                    <!--</div>-->\n                <!--</div>-->\n            <!--</div>-->\n        <!--</div>-->\n    <!--</div>-->\n<!--</section>-->\n","import {Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {DataSource} from \"@angular/cdk/table\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {SelectionModel} from \"@angular/cdk/collections\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Router} from \"@angular/router\";\nimport {MatMenuTrigger} from \"@angular/material/menu\";\nimport {BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Training} from \"../../../core/models/training/training\";\nimport {TrainingService} from \"../training.service\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './training.page.component.html',\n    styleUrls: ['./training.page.component.scss']\n})\n\nexport class TrainingPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    displayedColumns = [\n        'status',\n        'topic',\n        'startDate',\n        'endDate',\n        'capacity',\n        'network',\n        'location'\n    ];\n\n    database: TrainingService | null;\n    datasource: Source | null;\n    selection = new SelectionModel<Training>(true, []);\n    Training: Training | null;\n    profiles=[];\n    dim = {\n        width: '1200px',\n        height: '420px'\n    };\n\n    constructor(public http: HttpClient, public dialog: MatDialog, private snack: MatSnackBar, private factory: TrainingService, private router: Router){\n        super();\n    }\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild('filter', { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = { x: '0px', y: '0px' };\n\n    public load() {\n        this.database = new TrainingService(this.http);\n        this.datasource = new Source(this.database, this.paginator, this.sort);\n        this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\n            () => {\n                if (!this.datasource) {\n                    return;\n                }\n                this.datasource.filter = this.filter.nativeElement.value;\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.load();\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    success(){\n        this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n            this.router.navigate(['/organisation/training/page']);\n        });\n        this.toast('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.toast('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    displayManagers(managers) {\n        let display = '';\n        if (managers.length > 0) {\n            if (managers.length == 1) {\n                display = managers[0].fullname;\n            } else if (managers.length == 2){\n                display = managers[0].fullname + ' & ' + managers[1].fullname;\n            } else {\n                display = managers[0].fullname + ' & ' +  (managers.length-1) + ' autres';\n            }\n        }\n        return display;\n    }\n\n    add(){\n        this.router.navigate(['organisation/training/broadcast']);\n    }\n\n    details(rw){\n        localStorage.setItem(\"training\", JSON.stringify(rw));\n        this.router.navigate(['organisation/training/details'],{state:{training: rw}});\n    }\n}\n\n\nexport class Source extends DataSource<Training> {\n\n    filterChange = new BehaviorSubject('');\n\n    get filter(): string {\n        return this.filterChange.value;\n    }\n\n    set filter(filter: string) {\n        this.filterChange.next(filter);\n    }\n\n    filteredData: Training[] = [];\n    renderedData: Training[] = [];\n\n    constructor(public service: TrainingService, public paginator: MatPaginator, public ms: MatSort){\n        super();\n        this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n\n    connect(): Observable<Training[]>{\n        const displayDataChanges = [\n            this.service.dataChange,\n            this.ms.sortChange,\n            this.filterChange,\n            this.paginator.page,\n        ];\n        this.service.getTrainings();\n        return merge(...displayDataChanges).pipe(\n            map(() => {\n                this.filteredData = this.service.data\n                    .slice()\n                    .filter((training: Training) => {\n                        const search = (\n                            training.topic.title\n                        ).toLowerCase();\n                        return search.indexOf(this.filter.toLowerCase()) !== -1;\n                    });\n                const sortedData = this.sortData(this.filteredData.slice());\n                const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n                this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n                return this.renderedData;\n            })\n        );\n    }\n\n    disconnect() {}\n\n    sortData(data: Training[]): Training[] {\n        if (!this.ms.active || this.ms.direction === '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n            switch (this.ms.active) {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'name':\n                    [propertyA, propertyB] = [a.topic.title, b.topic.title];\n                    break;\n\n            }\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (\n                (valueA < valueB ? -1 : 1) * (this.ms.direction === 'asc' ? 1 : -1)\n            );\n        });\n    }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive\">\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ml-0\">\n                                                <li class=\"dropdown\"><h2><strong>{{'training.page' | translate}}</strong></h2></li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label><i class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\" aria-label=\"Search box\">\n                                                </li>\n                                            </ul>\n                                            <ul class=\"header-buttons\">\n                                                <li>\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>&nbsp;</div>\n                                <div>\n                                    <div style=\"font-weight: bold\">{{'Legend' | translate}}:</div>\n                                    <div>\n                                        {{'training_broadcast' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_broadcast\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'training_requested' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_requested\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'training_validated' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_validated\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'training_rejected' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_rejected\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'training_pending' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_pending\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'training_completed' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_completed\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'training_uncompleted' | translate}}: <button mat-icon-button class=\"btn-tbl-edit training_uncompleted\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                    </div>\n                                </div>\n\n                                <mat-table #table [dataSource]=\"datasource\" matSort class=\"mat-cell\">\n                                    <ng-container matColumnDef=\"status\">\n                                        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">\n                                            <span>\n                                                <button mat-icon-button class=\"btn-tbl-edit {{row.status.toLowerCase()}}\">\n                                                    <mat-icon></mat-icon>\n                                                </button>\n                                            </span>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <ng-container>\n                                        <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                                                          [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"topic\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Theme'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.topic.fullname}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"startDate\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Start Date'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.startDate}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"endDate\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'End Date'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.endDate}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"capacity\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Number of attendees'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.participants.length}}/<span style=\"font-weight: bold\">{{row.capacity * row.partners.length}}</span></mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"network\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Number of networks'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.partners.length}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"location\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Training Location'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.location.name}}</mat-cell>\n                                    </ng-container>\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"details(row)\" [style.cursor]=\"'pointer'\" matRipple> </mat-row>\n                                </mat-table>\n                                <mat-paginator #paginator [length]=\"datasource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import {NgModule } from '@angular/core';\nimport {Routes, RouterModule } from '@angular/router';\nimport {TrainingBroadcastComponent} from \"./broadcast/training.broadcast.component\";\nimport {TrainingBroadcastCompletionComponent} from \"./broadcast-completion/training.broadcast.completion.component\";\nimport {TrainingPageComponent} from \"./page/training.page.component\";\nimport {TrainingDetailsComponent} from \"./details/training.details.component\";\n\n\nconst routes: Routes = [\n    {\n        path: 'details',\n        component: TrainingDetailsComponent,\n    },\n    {\n        path: 'broadcast',\n        component: TrainingBroadcastComponent,\n    },\n    {\n        path: 'page',\n        component: TrainingPageComponent,\n    },\n    {\n        path: 'broadcast-completion',\n        component: TrainingBroadcastCompletionComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class TrainingRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatMenuModule } from '@angular/material/menu';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {NgxMaskModule} from \"ngx-mask\";\nimport {TrainingBroadcastComponent} from \"./broadcast/training.broadcast.component\";\nimport {TrainingRoutingModule} from \"./training-routing.module\";\nimport {TrainingService} from \"./training.service\";\nimport {InstitutionService} from \"../../configuration/institution/institution.service\";\nimport {TrainingBroadcastCompletionComponent} from \"./broadcast-completion/training.broadcast.completion.component\";\nimport {TrainingPageComponent} from \"./page/training.page.component\";\nimport {TopicService} from \"../../configuration/topic/topic.service\";\nimport {TrainingDetailsComponent} from \"./details/training.details.component\";\n\n@NgModule({\n    declarations: [\n        TrainingBroadcastComponent,\n        TrainingBroadcastCompletionComponent,\n        TrainingPageComponent,\n        TrainingDetailsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSnackBarModule,\n        MatButtonModule,\n        MatIconModule,\n        MatDialogModule,\n        MatSortModule,\n        MatToolbarModule,\n        MatSelectModule,\n        MatDatepickerModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        MaterialFileInputModule,\n        MatMenuModule,\n        MatProgressSpinnerModule,\n        TranslateModule,\n        TrainingRoutingModule,\n        NgxDatatableModule,\n        NgxMaskModule,\n        MatAutocompleteModule\n    ],\n    providers: [TrainingService, InstitutionService, TopicService]\n})\n\nexport class TrainingModule {}"],"sourceRoot":"webpack:///"}